install.packages(c("neuralnet", "rpart", "rpart.plot", "e1071", "caret", "arules", "arulesViz", "tidyverse", "magrittr", "stringr", "ggplot2", "nnet", "dplyr", "reshape2"))
library("ggplot2")
plot()
plot(0,0)
plot(1,0)
clear()
plot.function(1)
plot.function(x=1)
exit()
q()
library("swirl")
swirl()
swirl()
5+7
x <- 5+7
x
y = x-3
y
y <- x-3
u
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div = z/my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my_div
install_course("Regression_Models")
swirl()
q()
import
library("rstan")
install.packages("rstan")
require('csv')
data = lapply(as.factor, data)
RF = randomForest(formula = p1_horizontal + p1_vertical + p1_shoot ~ ., data = train_set, importance = T)
library(randomForest)
getwd()
setwd("C:/Users/julio/workspace/TCC/")
data = read.csv("output.csv")
set.seed(100)
amostra = sample(nrow(data), 0.7*nrow(data), replace = F)
train_set = data[amostra,]
test_set = data[-amostra,]
RF = randomForest(formula = p1_horizontal + p1_vertical + p1_shoot ~ ., data = train_set, importance = T)
RF = randomForest(formula = p1_shoot ~ ., data = train_set, importance = T)
yes
targets = data["p1_horizontal", "p1_vertical", "p1_shoot"]
del(targets)
remove(targets)
targets = cbind(data$p1_horizontal, data$p1_vertical, data$p1_shoot)
targets
targets = targets[1,]*100 + targets[2,]*10 + targets[3,]
targets
targets = cbind(data$p1_horizontal, data$p1_vertical, data$p1_shoot)
targets$1 * 100
targets[1] * 100
targets[1,] * 100
targets[1,]
targets
targets = targets[,1]*100 + targets[,2]*10 + targets[,3]
targets
remove(data$p1_horizontal)
data
data[, -c("p1_horizontal", "p1_vertical", "p1_shoot")]
values = c("p1_horizontal", "p1_vertical", "p1_shoot")
data[, -values]
data[, -"p1_score"]
data
data[, -1]
data[, !"p1_score"]
'%!in%' <- function(x,y)!('%in%'(x,y)) #MAGIC!
data[, %!in% values]
library(dplyr)
select(data, -p1_score)
select(data, c(-p1_shoot, -p1_horizontal))
data[, c(-p1_shoot)]
select(data, c(-p1_shoot, -p1_horizontal, -p1_vertical))
data = cbind(select(data, c(-p1_shoot, -p1_horizontal, -p1_vertical)), targets)
data
set.seed(100)
amostra = sample(nrow(data), 0.7*nrow(data), replace = F)
train_set = data[amostra,]
test_set = data[-amostra,]
RF = randomForest(formula = targets ~ ., data = train_set, importance = T)
RF
pred_train = predict(RF, train_set, type = "class")
table(pred_train, train_set$targets)
factors(target)
as.factors(target)
as.factor(target)
as.factor(targets)
factor(targets)
factor(as.char(targets))
factor(as.character(targets))
table(pred_train, train_set$targets)
mean(pred_train == train_set$targets)
