install.packages(c("neuralnet", "rpart", "rpart.plot", "e1071", "caret", "arules", "arulesViz", "tidyverse", "magrittr", "stringr", "ggplot2", "nnet", "dplyr", "reshape2"))
library("ggplot2")
plot()
plot(0,0)
plot(1,0)
clear()
plot.function(1)
plot.function(x=1)
exit()
q()
library("swirl")
swirl()
swirl()
5+7
x <- 5+7
x
y = x-3
y
y <- x-3
u
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div = z/my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my_div
install_course("Regression_Models")
swirl()
q()
import
library("rstan")
install.packages("rstan")
require('csv')
library(randomForest)
getwd()
setwd("C:/Users/julio/workspace/TCC/")
data = read.csv("output.csv")
head(data)
str(data)
set.seed(100)
amostra = sample(nrow(data), 0.7*nrow(data), replace = F)
train_set = data[train,]
test_set = data[-train,]
RF = randomForest(formula = p1_horizontal + p1_vertical + p1_shoot ~ ., data = train_set, importance = T)
amostra = sample(nrow(data), 0.7*nrow(data), replace = F)
train_set = data[train,]
test_set = data[-train,]
RF = randomForest(formula = p1_horizontal + p1_vertical + p1_shoot ~ ., data = train_set, importance = T)
train_set = data[amostra,]
test_set = data[-amostra,]
RF = randomForest(formula = p1_horizontal + p1_vertical + p1_shoot ~ ., data = train_set, importance = T)
